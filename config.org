#+TITLE: Emacs Configuration
#+SUBTITLE: Part II (Main Configuration)
#+AUTHOR: J. C. Koch
#+EMAIL: jchkoch@gmail.com
#+SEQ_TODO: FIXME | FIXED

* Sane Defaults
Sane defaults to customize Emacs configuration for the 21st century.

** Visual line mode & line numbers
First globally turn on visual line mode and line numbers for all buffer/file types.
Introduce the diminish package to diminish 'visual-line-mode' minor mode display on the mode line (i.e. all buffers will be word wrapped so showing this on the mode line is redundant).

#+begin_src emacs-lisp
(global-visual-line-mode 1) ; 1 for on, 0 for off.
(global-linum-mode 1) ; 1 for on, 0 for off.
#+END_SRC

#+RESULTS:
: t

** Set the default tab width to 4 spaces. 

#+BEGIN_SRC emacs-lisp
(setq tab-width 4)
#+END_SRC

** Answer questions with 'y' and 'n' characters.

#+BEGIN_SRC emacs-lisp
;; Answering just 'y' or 'n' will do
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

#+RESULTS:
: yes-or-no-p

** Set default coding system
Next set the default coding system to /UTF-8/ (i.e. unicode).

#+BEGIN_SRC emacs-lisp
(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
#+END_SRC

#+RESULTS:
** Follow symbolic file links

#+BEGIN_SRC emacs-lisp
  (setq vc-follow-symlinks t)
#+END_SRC

#+RESULTS:
: t
* Emacs Appearance
** Set default theme
Set the default theme to the tango-dark, font to Monospace-14, and change the cursor to a hbar. 
Set the cursor to stop blinking.

#+begin_src emacs-lisp
  (load-theme 'tango-dark t)
  (set-default 'cursor-type 'hbar)
  (add-to-list 'default-frame-alist
               '(font . "Monospace-14"))
#+end_src 

#+RESULTS:
: my/load-theme

* Base Packages
** IBuffer
Set the Buffer List buffer as to default with "ibuffer".

#+BEGIN_SRC emacs-lisp
  (use-package ibuffer
    :defer t
    :init
    (add-hook 'ibuffer-mode-hook
              (lambda ()
                (ibuffer-auto-mode 1)
                (ibuffer-switch-to-saved-filter-groups "default")))
    :config
    (setq ibuffer-saved-filter-groups
          (quote (("default"
                   ("dired" (mode . dired-mode))
                   ("org" (name . "^.*org$"))
                   ("shell" (or (mode . eshell-mode) (mode . shell-mode)))
                   ("programming" (or
                                   (mode . python-mode)
                                   (mode . octave-mode)))
                   ("emacs" (or
                             (name . "^\\*scratch\\*$")
                             (name . "^\\*Messages\\*$")))
                   ("magit" (mode . Magit)) 
                   ))))
    :bind ("C-x C-b" . 'ibuffer))
#+END_SRC

#+RESULTS:
: ibuffer

** Ivy Mode
Ivy is an interactive interface for completion in Emacs. 
Emacs uses completion mechanism in a variety of contexts: code, menus, commands, variables, functions, etc. 
Completion entails listing, sorting, filtering, previewing, and applying actions on selected items. 
When active, ivy-mode completes the selection process by narrowing available choices while previewing in the minibuffer. 
Selecting the final candidate is either through simple keyboard character inputs or through powerful regular expressions.

-taken from Ivy User Manual Copyright (C) 2015-2018 Free Software Foundation, Inc. 

#+BEGIN_SRC emacs-lisp
  (use-package ivy
    :diminish ivy-mode
    :init
    (ivy-mode 1)
    :config
    (setq ivy-use-virtual-buffers t)
    (setq ivy-count-format "%d/%d")
    (setq org-refile-use-outline-path 'file
          org-outline-path-complete-in-steps nil)
    :bind ("C-c C-r" . 'ivy-resume))
#+END_SRC

#+RESULTS:
: ivy-resume

** Undo Tree
Package improves undo/redo commands within Emacs. Note that custom key binding for undo "C-z" replaces (removes) normal command to minimize the Emacs window.

#+BEGIN_SRC emacs-lisp
(use-package undo-tree
  :diminish undo-tree-mode
  :config
  (global-undo-tree-mode) ;;turn on everywhere
  (defalias 'redo 'undo-tree-redo)
  :bind
  ("C-z" . 'undo-tree-undo)
  ("C-S-z" . 'redo))
#+END_SRC

#+RESULTS:
: redo

** Try Other Packages
A package to try other Emacs Packages without having to install the package.

#+BEGIN_SRC emacs-lisp
  (use-package try
    :diminish try-mode
    :defer t)
#+END_SRC

#+RESULTS:

* Org Mode

#+BEGIN_SRC emacs-lisp
  (use-package org
  :mode (("\\.org$" . org-mode))
  :ensure org-plus-contrib
  :bind 
  (("<f12>" . org-agenda)
   ("C-c l" . org-insert-link)
   ("C-o" . org-open-at-point)
   ("C-c c" . org-capture)))  
#+END_SRC

#+RESULTS:
