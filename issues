Warning (python): Python shell prompts cannot be detected.
If your emacs session hangs when starting python shells
recover with ‘keyboard-quit’ and then try fixing the
interactive flag for your interpreter by adjusting the
‘python-shell-interpreter-interactive-arg’ or add regexps
matching shell prompts in the directory-local friendly vars:
  + ‘python-shell-prompt-regexp’
  + ‘python-shell-prompt-block-regexp’
  + ‘python-shell-prompt-output-regexp’
Or alternatively in:
  + ‘python-shell-prompt-input-regexps’
  + ‘python-shell-prompt-output-regexps’
Warning (python): Your ‘python-shell-interpreter’ doesn’t seem to support readline, yet ‘python-shell-completion-native-enable’ was t and "jupyter" is not part of the ‘python-shell-completion-native-disabled-interpreters’ list.  Native completions have been disabled locally.  

(use-package ob-ipython
  :ensure t
  :config
  (setq python-shell-completion-native-enable nil)
  (setq python-shell-prompt-detect-failure-warning nil))

(use-package elpy
  :ensure t      
  :config        
  (elpy-enable))

(elpy-enable)                                                 
(elpy-use-python)                                             
                                                              
;; use flycheck not flymake with elpy                         
(when (require 'flycheck nil t)                               
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))                  
                                                              
;; enable autopep8 formatting on save                         
(require 'py-autopep8)                                        
(add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)

(require 'python-mode)                          
(setq-default py-shell-name "ipython")          
(setq-default py-which-bufname "IPython")       
(setq py-python-command-args                    
  '("--gui=wx" "--pylab=wx" "-colors" "Linux")) 
(setq py-force-py-shell-name-p t)               
; switch to the interpreter after executing code
(setq py-shell-switch-buffers-on-execute-p t)   
(setq py-switch-buffers-on-execute-p t)         
; don't split windows                           
(setq py-split-windows-on-execute-p nil)        
; try to automagically figure out indentation   
(setq py-smart-indentation t)

** Anaconda3 Venv Attempted Config

#+BEGIN_SRC emacs-lisp
(use-package conda
  :ensure t
  :init
  (setq conda-anaconda-home (expand-file-name "~/anaconda3"))
  :config
  ;; If you want interactive shell support, include:
  (conda-env-initialize-interactive-shells)
  ;; If you want eshell support, include:
  (conda-env-initialize-eshell)
  ;; If you want auto-activation, include:
  (conda-env-autoactivate-mode t)
  ;; Activate the project/virtual env you want to use.
  ;; Via M-x conda-env-activate RET analyticd-pysystemtrade
  ;; or
  ;; (conda-env-activate "work-lidar")
)
#+END_SRC
